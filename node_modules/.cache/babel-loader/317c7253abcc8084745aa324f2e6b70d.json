{"ast":null,"code":"var _jsxFileName = \"/home/islam/Downloads/s9vgx/src/Login.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loginContainer\",\n      className: \"signinup-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, \" Log In \"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\",\n        rememberMe: false,\n        error: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().required(\"Please enter email to login.\").email(\"Please enter a valid email.\"),\n        password: Yup.string().required(\"Please enter your password.\")\n      }),\n      onSubmit: (values, {\n        resetForm,\n        setErrors,\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n          this.props.history.replace(\"/dashboard\"); //this.props.history.push('/dashboard');\n        }, 500);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, props => {\n      const values = props.values,\n            touched = props.touched,\n            errors = props.errors,\n            isSubmitting = props.isSubmitting,\n            handleChange = props.handleChange;\n      return /*#__PURE__*/React.createElement(Form, {\n        id: \"loginForm\",\n        className: \"signinupForm\",\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"error\",\n        component: \"span\",\n        className: \"login-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Enter your email\",\n        className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"span\",\n        className: \"invalid-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Enter your password\",\n        className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(ErrorMessage, {\n        name: \"password\",\n        component: \"span\",\n        className: \"invalid-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"rememberMe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"rememberMe\",\n        name: \"rememberMe\",\n        onChange: handleChange,\n        defaultChecked: values.rememberMe,\n        value: values.rememberMe,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }), \"Remember me\")), isSubmitting ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"loader-gif\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, \"loading\") : null, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-filled\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, \"Login\"));\n    }));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/islam/Downloads/s9vgx/src/Login.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","Yup","withRouter","Login","constructor","props","render","email","password","rememberMe","error","object","shape","string","required","values","resetForm","setErrors","setSubmitting","setTimeout","console","log","history","replace","touched","errors","isSubmitting","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC5BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAyB,MAAA,SAAS,EAAC,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbC,QAAAA,KAAK,EAAE,EADM;AAEbC,QAAAA,QAAQ,EAAE,EAFG;AAGbC,QAAAA,UAAU,EAAE,KAHC;AAIbC,QAAAA,KAAK,EAAE;AAJM,OADjB;AAOE,MAAA,gBAAgB,EAAET,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACnCL,QAAAA,KAAK,EAAEN,GAAG,CAACY,MAAJ,GACJC,QADI,CACK,8BADL,EAEJP,KAFI,CAEE,6BAFF,CAD4B;AAInCC,QAAAA,QAAQ,EAAEP,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,6BAAtB;AAJyB,OAAnB,CAPpB;AAaE,MAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA;AAAxB,OAAT,KAAqD;AAC7DC,QAAAA,UAAU,CAAC,MAAM;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,MAA1B;AACAG,UAAAA,aAAa,CAAC,KAAD,CAAb;AAEA,eAAKb,KAAL,CAAWiB,OAAX,CAAmBC,OAAnB,CAA2B,YAA3B,EAJe,CAKf;AACD,SANS,EAMP,GANO,CAAV;AAOD,OArBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAuBGlB,KAAK,IAAI;AAAA,YAENU,MAFM,GAOJV,KAPI,CAENU,MAFM;AAAA,YAGNS,OAHM,GAOJnB,KAPI,CAGNmB,OAHM;AAAA,YAINC,MAJM,GAOJpB,KAPI,CAINoB,MAJM;AAAA,YAKNC,YALM,GAOJrB,KAPI,CAKNqB,YALM;AAAA,YAMNC,YANM,GAOJtB,KAPI,CAMNsB,YANM;AASR,0BACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAA8C,QAAA,UAAU,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,SAAS,EAAC,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAME;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAE,OADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,kBAHd;AAIE,QAAA,SAAS,EACP,kBACCF,MAAM,CAAClB,KAAP,IAAgBiB,OAAO,CAACjB,KAAxB,GAAgC,aAAhC,GAAgD,EADjD,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,eAaE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CANF,eA0BE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAE,UADR;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,qBAHd;AAIE,QAAA,SAAS,EACP,kBACCkB,MAAM,CAACjB,QAAP,IAAmBgB,OAAO,CAAChB,QAA3B,GAAsC,aAAtC,GAAsD,EADvD,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,eAaE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CA1BF,eA8CE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAC,YAFL;AAGE,QAAA,IAAI,EAAC,YAHP;AAIE,QAAA,QAAQ,EAAEmB,YAJZ;AAKE,QAAA,cAAc,EAAEZ,MAAM,CAACN,UALzB;AAME,QAAA,KAAK,EAAEM,MAAM,CAACN,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gBADF,CA9CF,EA4DGiB,YAAY,gBACX;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADW,GAET,IA9DN,eA+DE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,gBAFZ;AAGE,QAAA,QAAQ,EAAEA,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA/DF,CADF;AA0ED,KA1GH,CAFF,CADF;AAiHD;;AAvH2B;;AA0H9B,eAAexB,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"loginContainer\" className=\"signinup-container\">\r\n        <h3 className=\"mb-4\"> Log In </h3>\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: false,\r\n            error: \"\"\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            email: Yup.string()\r\n              .required(\"Please enter email to login.\")\r\n              .email(\"Please enter a valid email.\"),\r\n            password: Yup.string().required(\"Please enter your password.\")\r\n          })}\r\n          onSubmit={(values, { resetForm, setErrors, setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n              \r\n              this.props.history.replace(\"/dashboard\");\r\n              //this.props.history.push('/dashboard');\r\n            }, 500);\r\n          }}\r\n        >\r\n          {props => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n              isSubmitting,\r\n              handleChange\r\n            } = props;\r\n\r\n            return (\r\n              <Form id=\"loginForm\" className=\"signinupForm\" noValidate>\r\n                <ErrorMessage\r\n                  name=\"error\"\r\n                  component=\"span\"\r\n                  className=\"login-error\"\r\n                />\r\n                <div className=\"form-group \">\r\n                  <label className=\"form-label\" htmlFor=\"email\">\r\n                    Email\r\n                  </label>\r\n                  <Field\r\n                    type={\"email\"}\r\n                    name=\"email\"\r\n                    placeholder=\"Enter your email\"\r\n                    className={\r\n                      \"form-control\" +\r\n                      (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                    }\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"span\"\r\n                    className=\"invalid-input\"\r\n                  />\r\n                </div>\r\n                {/* Email */}\r\n                <div className=\"form-group position-relative\">\r\n                  <label className=\"form-label\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <Field\r\n                    type={\"password\"}\r\n                    name=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    className={\r\n                      \"form-control\" +\r\n                      (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                    }\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"password\"\r\n                    component=\"span\"\r\n                    className=\"invalid-input\"\r\n                  />\r\n                </div>\r\n                {/* Password */}\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\" htmlFor=\"rememberMe\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"rememberMe\"\r\n                      name=\"rememberMe\"\r\n                      onChange={handleChange}\r\n                      defaultChecked={values.rememberMe}\r\n                      value={values.rememberMe}\r\n                    />\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n                {/* Rememeber Me */}\r\n                {isSubmitting ? (\r\n                  <span className=\"loader-gif\">loading</span>\r\n                ) : null}\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-filled\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Login\r\n                </button>\r\n                {/*Submit */}\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}